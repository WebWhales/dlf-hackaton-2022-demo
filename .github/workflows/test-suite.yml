name: Test Suite

on:
  workflow_dispatch:
  pull_request:

jobs:

  phpunit:
    runs-on: ubuntu-latest

    env:
      DB_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}

    services:
      mysql-service:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}
          MYSQL_DATABASE: db_test
        ports:
          - 33306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.0'
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Copy .env
      run: php -r "copy('.env.ci', '.env');"

    - name: Get Composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache Composer Packages
      uses: actions/cache@v2
      env:
        cache-name: cache-composer-packages
      with:
        path: ./vendor
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-

    - name: Cache Composer Dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-composer-dependencies
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-

    - name: Install PHP Dependencies
      run: composer install --no-ansi --no-interaction --no-scripts --prefer-dist

    - name: Get Yarn Cache Directory Path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache Yarn Dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-yarn-dependencies
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-

    - name: Cache Node Modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ./node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-

    - name: Install JS Dependencies
      run: yarn install --frozen-lockfile

    - name: Compile JS
      run: yarn dev

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Execute tests via PHPUnit
      run: php artisan test -v
